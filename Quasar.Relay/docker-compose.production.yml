version: '3.8'

services:
  relay-load-balancer:
    image: nginx:latest
    container_name: relay-load-balancer
    ports:
      - "443:443"
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - ./certs:/etc/nginx/certs
    depends_on:
      - relay-server-1
      - relay-server-2
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    networks:
      - relay-network
      - frontend-network

  relay-server-1:
    image: quasar/relay-server:production
    container_name: quasar-relay-1
    expose:
      - "8080"
    ports:
      - "3478:3478/udp"
    volumes:
      - ./config/relay:/app/config
      - ./logs/relay1:/app/logs
      - ./data/relay1:/app/data
    environment:
      - NODE_ENV=production
      - RELAY_SERVER_URL=wss://your-domain.com
      - RELAY_SERVER_ID=relay1
      - STUN_SERVER_PORT=3478
      - ENABLE_SECURITY=true
      - RATE_LIMIT=20
      - RATE_LIMIT_WINDOW=60000
      - AUDIT_LOGGING=true
      - ENCRYPTION_REQUIRED=true
      - SECURE_CREDENTIAL_STORAGE=true
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - relay-network
      - backend-network

  relay-server-2:
    image: quasar/relay-server:production
    container_name: quasar-relay-2
    expose:
      - "8080"
    ports:
      - "3479:3478/udp"
    volumes:
      - ./config/relay:/app/config
      - ./logs/relay2:/app/logs
      - ./data/relay2:/app/data
    environment:
      - NODE_ENV=production
      - RELAY_SERVER_URL=wss://your-domain.com
      - RELAY_SERVER_ID=relay2
      - STUN_SERVER_PORT=3478
      - ENABLE_SECURITY=true
      - RATE_LIMIT=20
      - RATE_LIMIT_WINDOW=60000
      - AUDIT_LOGGING=true
      - ENCRYPTION_REQUIRED=true
      - SECURE_CREDENTIAL_STORAGE=true
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - relay-network
      - backend-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    expose:
      - "9090"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    user: "65534:65534"
    networks:
      - backend-network
      - monitoring-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/dashboard.json:/etc/grafana/dashboards/quasar-relay.json
    depends_on:
      - prometheus
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://monitoring.your-domain.com
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/dashboards/quasar-relay.json
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    networks:
      - monitoring-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - "9100"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    networks:
      - monitoring-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    expose:
      - "8080"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    networks:
      - monitoring-network

  backup-service:
    image: debian:bullseye-slim
    container_name: backup-service
    volumes:
      - ./data:/data:ro
      - ./logs:/logs:ro
      - ./backups:/backups
      - ./config/backup:/etc/backup
      - ./config/backup/backup.sh:/usr/local/bin/backup.sh
    entrypoint: ["/bin/bash", "-c"]
    command: |
      chmod +x /usr/local/bin/backup.sh && 
      echo "0 2 * * * /usr/local/bin/backup.sh >> /backups/backup.log 2>&1" > /etc/crontab && 
      cron -f
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    networks:
      - backend-network

  security-gateway:
    image: nginx:latest
    container_name: security-gateway
    ports:
      - "80:80"
    volumes:
      - ./config/nginx/security.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    networks:
      - frontend-network

networks:
  frontend-network:
    driver: bridge
  relay-network:
    driver: bridge
  backend-network:
    driver: bridge
    internal: true
  monitoring-network:
    driver: bridge
    internal: true

volumes:
  prometheus_data:
  grafana_data:
